name: Android Release

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  workflow_dispatch:

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build:
    name: Create Android Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Start Android Release Build
        run: flutter build appbundle --flavor prod --no-tree-shake-icons

      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v2
        with:
          name: android-release
      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: dev.hemanths.paisa
          releaseFiles: app-release.aab
          track: alpha
          status: completed
# name: Build and Release in Play Store and Github

# # Controls when the action will run. Triggers the workflow on push or pull request
# # events but only for the master branch
# on:
#   push:
#     tags:
#       - "internal-v*.*.*" # on every version tag will build a new android artifact example: v3.1.2+6
# jobs:
#   build:
#     name: Build Artifacts and Release
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Setup Java
#         uses: actions/setup-java@v2
#         with:
#           distribution: "zulu"
#           java-version: "11"
#       - name: Setup Flutter
#       - uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#       - name: Download Android Keystore File
#         id: android_keystore_file
#         uses: timheuer/base64-to-file@v1.2
#         with:
#           fileName: key.jks
#           encodedString: ${{ secrets.KEYSTORE }}

#       - name:  Create key.properties file

#         run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

#       - uses: olegtarasov/get-tag@v2 # that generate $GIT_TAG_NAME env
#         id: tagName
#         with:
#           tagRegex: 'internal-v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
#           tagRegexGroup: 1 # Optional. Default is 1.

#       - name: Replace YAML version with tag version
#         run: |
#           sed -i 's/99.99.99+99/'$GIT_TAG_NAME'/g' pubspec.yaml|
#           echo "Tag used version:"$GIT_TAG_NAME
#       - name: Pub Get Packages
#         run: flutter pub get

#       - name: Build APPBUNDLE
#         run: flutter build appbundle --release

#       - name: Create Github Release
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/bundle/release/*.aab"
#           token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}

#       - name: Save APPBUNDLE to Artifacts
#         uses: actions/upload-artifact@v2
#         with:
#           name: APPBUNDLE
#           path: build/app/outputs/bundle/release/app-release.aab
#   release_internal:
#     name: Release Artifacts to internal track
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: Get APPBUNDLE from Artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: APPBUNDLE
#       - name: Release APPBUNDLE to internal track
#         uses: r0adkll/upload-google-play@v1
#         with:
#           serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_JSONKEY }}
#           packageName: com.example.app
#           releaseFile: app-release.aab
#           track: internal
#           whatsNewDirectory: distribution/whatsnew
